version: '3'
services:
  sqlite3:
    container_name: sqlite3_container
    image: ronelcoe/sqlite3-gogs:1.0
    stdin_open: true
    tty: true
    volumes:
      - "$PWD/gogs/sqlite3/data:/data"
    ports:
      - '3306:3306'
    restart: unless-stopped

  gogs:
    container_name: gogs
    restart: always
    image: gogs/gogs:0.12
    ports:
      - "3022:22"
      - "3000:3000"
    volumes:
      - "$PWD/gogs/data:/data/gogs"
      - "$PWD/gogs/repo:/data/git/gogs-repositories"
    environment:
      - "RUN_CROND=true"
    depends_on:
      - sqlite3
    networks: 
      - devops_toolchain_network

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins
    user: root
    ports:
      - 8080:8080
    volumes:
      - "$PWD/jenkins_master:/var/jenkins_home"
    networks:
      - devops_toolchain_network

  sonarqube:
    container_name: sonarqube
    image: sonarqube:8.9.9-community
    depends_on:
      - sonarqube_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - "$PWD/sonarqube/data:/opt/sonarqube/data"
      - "$PWD/sonarqube/extensions:/opt/sonarqube/extensions"
      - "$PWD/sonarqube/logs:/opt/sonarqube/logs"
    restart: always
    networks:
      - devops_toolchain_network

  sonarqube_db:
    container_name: sonarqube_db
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - "$PWD/sonarqube/postgresql:/var/lib/postgresql"
      - "$PWD/sonarqube/postgresql/data:/var/lib/postgresql/data"
    restart: always

  nexus:
    container_name: nexus
    image: sonatype/nexus3
    ports:
      - 8081:8081
    volumes:
      - "$PWD/nexus/data:/nexus-data"
    restart: always
    networks:
      - devops_toolchain_network

networks:
  devops_toolchain_network: